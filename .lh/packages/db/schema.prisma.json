{
    "sourceFile": "packages/db/schema.prisma",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1759207963738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1759215835736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n   provider = \"prisma-client-js\"\n }\n \n datasource db {\n-  provider = \"mongodb\"\n+  provider = \"mysql\"\n   url      = env(\"DATABASE_URL\")\n }\n \n enum Role {\n@@ -12,57 +12,57 @@\n   manager\n }\n \n model User {\n-  id          String       @id @default(auto()) @map(\"_id\") @db.ObjectId\n-  name        String\n-  email       String       @unique\n-  password    String\n-  role        Role         @default(manager)\n+  id          Int       @id @default(autoincrement())\n+  name        String    @db.VarChar(255)\n+  email       String    @unique @db.VarChar(255)\n+  password    String    @db.VarChar(255)\n+  role        Role      @default(manager)\n   products    Product[]\n   clients     Client[]\n   transactions Transaction[]\n-  createdAt   DateTime     @default(now())\n-  updatedAt   DateTime     @updatedAt\n+  createdAt   DateTime  @default(now())\n+  updatedAt   DateTime  @updatedAt\n }\n \n model Product {\n-  id         String    @id @default(auto()) @map(\"_id\") @db.ObjectId\n+  id         Int       @id @default(autoincrement())\n   manager    User      @relation(fields: [managerId], references: [id])\n-  managerId  String    @db.ObjectId\n-  name       String\n-  type       String\n-  unit       String\n+  managerId  Int\n+  name       String    @db.VarChar(255)\n+  type       String    @db.VarChar(100)\n+  unit       String    @db.VarChar(50)\n   price      Float\n-  stock      Float      @default(0)\n-  createdAt  DateTime   @default(now())\n-  updatedAt  DateTime   @updatedAt\n+  stock      Float     @default(0)\n+  createdAt  DateTime  @default(now())\n+  updatedAt  DateTime  @updatedAt\n   transactions Transaction[]\n }\n \n model Client {\n-  id         String    @id @default(auto()) @map(\"_id\") @db.ObjectId\n+  id         Int       @id @default(autoincrement())\n   manager    User      @relation(fields: [managerId], references: [id])\n-  managerId  String    @db.ObjectId\n-  name       String\n-  phone      String?\n-  address    String?\n+  managerId  Int\n+  name       String    @db.VarChar(255)\n+  phone      String?   @db.VarChar(20)\n+  address    String?   @db.Text\n   balance    Float     @default(0)\n   createdAt  DateTime  @default(now())\n   updatedAt  DateTime  @updatedAt\n   transactions Transaction[]\n }\n \n model Transaction {\n-  id         String    @id @default(auto()) @map(\"_id\") @db.ObjectId\n+  id         Int       @id @default(autoincrement())\n   client     Client    @relation(fields: [clientId], references: [id])\n-  clientId   String    @db.ObjectId\n+  clientId   Int\n   manager    User      @relation(fields: [managerId], references: [id])\n-  managerId  String    @db.ObjectId\n+  managerId  Int\n   product    Product?  @relation(fields: [productId], references: [id])\n-  productId  String?   @db.ObjectId\n-  type       String\n+  productId  Int?\n+  type       String    @db.VarChar(50)\n   quantity   Float?\n   amount     Float\n-  note       String?\n+  note       String?   @db.Text\n   createdAt  DateTime  @default(now())\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1759207963738,
            "name": "Commit-0",
            "content": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"mongodb\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum Role {\n  admin\n  manager\n}\n\nmodel User {\n  id          String       @id @default(auto()) @map(\"_id\") @db.ObjectId\n  name        String\n  email       String       @unique\n  password    String\n  role        Role         @default(manager)\n  products    Product[]\n  clients     Client[]\n  transactions Transaction[]\n  createdAt   DateTime     @default(now())\n  updatedAt   DateTime     @updatedAt\n}\n\nmodel Product {\n  id         String    @id @default(auto()) @map(\"_id\") @db.ObjectId\n  manager    User      @relation(fields: [managerId], references: [id])\n  managerId  String    @db.ObjectId\n  name       String\n  type       String\n  unit       String\n  price      Float\n  stock      Float      @default(0)\n  createdAt  DateTime   @default(now())\n  updatedAt  DateTime   @updatedAt\n  transactions Transaction[]\n}\n\nmodel Client {\n  id         String    @id @default(auto()) @map(\"_id\") @db.ObjectId\n  manager    User      @relation(fields: [managerId], references: [id])\n  managerId  String    @db.ObjectId\n  name       String\n  phone      String?\n  address    String?\n  balance    Float     @default(0)\n  createdAt  DateTime  @default(now())\n  updatedAt  DateTime  @updatedAt\n  transactions Transaction[]\n}\n\nmodel Transaction {\n  id         String    @id @default(auto()) @map(\"_id\") @db.ObjectId\n  client     Client    @relation(fields: [clientId], references: [id])\n  clientId   String    @db.ObjectId\n  manager    User      @relation(fields: [managerId], references: [id])\n  managerId  String    @db.ObjectId\n  product    Product?  @relation(fields: [productId], references: [id])\n  productId  String?   @db.ObjectId\n  type       String\n  quantity   Float?\n  amount     Float\n  note       String?\n  createdAt  DateTime  @default(now())\n}"
        }
    ]
}